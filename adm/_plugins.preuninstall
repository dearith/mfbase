#!/bin/bash

function usage() {
    echo "usage: _plugins.postuninstall NAME VERSION RELEASE"
    echo "DO NOT USE DIRECTLY ! it's called by plugins.uninstall"
}

if test $# -ne 3; then
    usage
    exit 1
fi

NAME=${1}
if test "${1}" = "--help"; then
    usage
    exit 0
fi

PLUGIN_HOME=$(plugins.info --just-home "${NAME}" || true)
if test "${PLUGIN_HOME}" = ""; then
    exit 0
fi
if ! test -d "${PLUGIN_HOME}"; then
    exit 0
fi

source "${MODULE_HOME}/share/sqltools.sh"

RES=0

# see https://dba.stackexchange.com/questions/11893/force-drop-db-while-others-may-be-connected
# see https://github.com/metwork-framework/mfbase/issues/23
cat >/tmp/drop.$$ <<EOF
UPDATE pg_database SET datallowconn = 'false' WHERE datname = 'plugin_${NAME}';
EOF
batch_psql /tmp/drop.$$ "make sure no one can connect to this database" || RES=1
rm -f /tmp/drop.$$

cat >/tmp/drop.$$ <<EOF
SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'plugin_${NAME}';
EOF
batch_psql /tmp/drop.$$ "force disconnection of all clients connected" || RES=1
rm -f /tmp/drop.$$

dropdb -h "${MODULE_RUNTIME_HOME}/var" -p "${MFBASE_POSTGRESQL_PORT}" -U "${MFBASE_POSTGRESQL_USERNAME}" "plugin_${NAME}" || RES=1
dropuser -h "${MODULE_RUNTIME_HOME}/var" -p "${MFBASE_POSTGRESQL_PORT}" -U "${MFBASE_POSTGRESQL_USERNAME}" "plugin_${NAME}" || RES=1
exit ${RES}
